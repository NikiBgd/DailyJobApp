@using DataBaseCommunication.DataBaseObjects
@using DailyJobStarterPack.DataBaseObjects
@using DailyJobStarterPack.Web.ViewModels.Security

@{
    var clientsBillings = ViewData["clientsBillings"] as Dictionary<long, List<Billing>>;
    var clients = ViewData["clients"] as List<ClientProfile>;
    var minMonth = (int)ViewData["minMonth"];
    var startMonth = (int)ViewData["startMonth"];
    var hasRecords = (bool)ViewData["hasRecords"];
    var hasData = (bool)ViewData["hasData"];
    var year = (int)ViewData["year"];

    var start = (int)ViewData["start"];
    var end = (int)ViewData["end"];

    var period = (int)ViewData["period"];
    var size = (int)ViewData["size"];


    var firstWarningDeadline = (int)ViewData["firstWarningDeadline"];
    var secondWarningDeadline = (int)ViewData["secondWarningDeadline"];

    var currentDateTime = DateTime.Now;
    var monthsName = new List<string>() { "Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar" };

    var diffBetweenMonths = currentDateTime.Month - minMonth;
    if (diffBetweenMonths == currentDateTime.Month)
    {
        diffBetweenMonths = 1;
    }

    var totalNumber = clients.Count;
}



<h1>@year  godina</h1>

<br />
<br />
<div class="form-group">
    <div>
        <a class="btn btn-info create-bill" href="#">Kreiraj vanrednu fakturu</a>
    </div>
</div>
<div class="form-group">
    <div>
        <a class="btn btn-info" href="@Url.Action("AllUsers", "Billing")?year=@year&period=1">Mesecni prikaz</a>
        <a class="btn btn-info" href="@Url.Action("AllUsers", "Billing")?year=@year&period=3">Tromesecni prikaz</a>
    </div>
</div>

<div class="form-group">
    <div>
        <a class="btn btn-info" href="@Url.Action("AllUsers", "Billing")?year=@year&period=@period&size=@(size-1)">Prethodni period</a>
        <a class="btn btn-info" href="@Url.Action("AllUsers", "Billing")?year=@year&period=@period&size=@(size+1)">Naredni period</a>
    </div>
</div>

<table id="mytable" class="table table-bordred table-striped" style="border: 1px solid black;">
    <tbody>
        <tr>
            <th>Select</th>
            <th>Ime firme</th>

            @*@if (minMonth > 0)
                {
                    for (int i = minMonth; i <= currentDateTime.Month; i++)
                    {
                        <th>@i <input class="js-month-value" type="checkbox" name="Month_@i" data-month="@i" data-year="@year"><br></th>
                    }
                }
                else
                {
                    <th>@currentDateTime.Month <input class="js-month-value" type="checkbox" name="Month_@currentDateTime.Month" data-year="@year" data-month="@currentDateTime.Month"><br></th>
                }*@


            @for (int i = start; i <= end; i++)
            {
                var totalPaidForMonth = 0;
                decimal amountTotal = 0;
                decimal amountPaid = 0;
                foreach (var bilList in clientsBillings)
                {
                    var a = bilList.Value;
                    var b = a.Count(x => x.Month == i && x.Year == year && x.Paid);
                    totalPaidForMonth += b;

                    var client = SessionData.Clients.FirstOrDefault(x => x.CustomerID == bilList.Key);
                    amountTotal += client.LocalAmount;
                    if (b == 1)
                    {
                        amountPaid += client.LocalAmount;
                    }
                }

                var color = "";
                if (totalPaidForMonth != totalNumber)
                {
                    if (DateTime.Now < new DateTime(DateTime.Now.Year, DateTime.Now.Month, secondWarningDeadline))
                    {
                        color = "yellow";
                    }
                    else
                    {
                        color = "LightSalmon";
                    }
                }
                else
                {
                    color = "lightgreen";
                }

                <th style="@string.Format("background-color: {0}", color)">@(monthsName[i - 1]) <input class="js-month-value" type="checkbox" name="Month_@i" data-month="@i" data-year="@year">
                    <br>Ukupno @totalNumber - Placeno @totalPaidForMonth
                    <br>Procenat: @(Math.Round((decimal)totalPaidForMonth/totalNumber, 2) * 100) %
                    <br>Ukupan iznos: @amountTotal RSD
                    <br>Naplaceni iznos: @amountPaid RSD
                    <br>Preostalo: @(amountTotal - amountPaid)
                </th>
            }


        </tr>
    </tbody>
    <tbody>
        <tr>
            <td></td>
            <td></td>
            @for (int i = start; i <= end; i++)
            {
                <td id="month-@i"></td>
            }
        </tr>


        @foreach (var client in clients)
        {
            var clientBillings = clientsBillings[client.CustomerID];
            if (clientBillings != null && clientBillings.Count > 0)
            {

                <tr>
                    <td>
                        <input class="js-client-id" type="checkbox" name="ClientCheckbox" data-client-id="@client.CustomerID"><br>
                    </td>
                    <td>
                        <div><a href="@Url.Action("ClientBilling", "Billing")?year=@year&clientId=@client.CustomerID">@client.Name</a></div>
                        <div>Cena: @SessionData.Clients.FirstOrDefault(x => x.CustomerID == client.CustomerID).Amount @SessionData.Clients.FirstOrDefault(x => x.CustomerID == client.CustomerID).AmountCode</div>
                    </td>
                    

                    @for (int i = start; i <= end; i++)
                    {
                        var currentMonthBilling = clientBillings.Where(x => x.Month == i).FirstOrDefault();
                        
                        if (currentMonthBilling != null)
                        {
                            <td>
                                <input class="js-checkbox-paid" type="checkbox" name="PaidCheckbox" @(currentMonthBilling.Paid ? "checked" : "") disabled>Placeno<br>
                                <input class="js-checkbox-first-warning" type="checkbox" name="FirstWarningCheckbox" @(currentMonthBilling.FirstWarning ? "checked" : "") disabled>Poslata Prva opomena<br>
                                <input class="js-checkbox-second-warning" type="checkbox" name="SecondWarningCheckbox" @(currentMonthBilling.SecondWarning ? "checked" : "") disabled>Poslata Druga opomena<br>
                            </td>
                        }
                        else
                        {
                            <td>
                                <input class="js-checkbox-paid" type="checkbox" name="PaidCheckbox" disabled>Placeno<br>
                                <input class="js-checkbox-first-warning" type="checkbox" name="FirstWarningCheckbox" disabled>Poslata Prva opomena<br>
                                <input class="js-checkbox-second-warning" type="checkbox" name="SecondWarningCheckbox" disabled>Poslata Druga opomena<br>
                            </td>
                        }
                    }

                </tr>
            }
            else
            {

                <tr>

                    <td>
                        <input class="js-client-id" type="checkbox" name="ClientCheckbox" data-client-id="@client.CustomerID"><br>
                    </td>
                    <td>
                        <div><a href="@Url.Action("ClientBilling", "Billing")?year=@year&clientId=@client.CustomerID">@client.Name</a></div>
                        <div>Cena: @SessionData.Clients.FirstOrDefault(x => x.CustomerID == client.CustomerID).Amount @SessionData.Clients.FirstOrDefault(x => x.CustomerID == client.CustomerID).AmountCode</div>
                    </td>

                    @if (hasRecords)
                    {
                        for (int i = start; i <= end; i++)
                        {
                            <td>
                                <input class="js-checkbox-paid" type="checkbox" name="PaidCheckbox" disabled>Placeno<br>
                                <input class="js-checkbox-first-warning" type="checkbox" name="FirstWarningCheckbox" disabled>Poslata Prva opomena<br>
                                <input class="js-checkbox-second-warning" type="checkbox" name="SecondWarningCheckbox" disabled>Poslata Druga opomena<br>
                            </td>
                        }
                    }
                    else
                    {
                        for (int i = start; i <= end; i++)
                        {
                            <td>
                                <input class="js-checkbox-paid" type="checkbox" name="PaidCheckbox" disabled>Placeno<br>
                                <input class="js-checkbox-first-warning" type="checkbox" name="FirstWarningCheckbox" disabled>Poslata Prva opomena<br>
                                <input class="js-checkbox-second-warning" type="checkbox" name="SecondWarningCheckbox" disabled>Poslata Druga opomena<br>
                            </td>
                        }
                    }

                </tr>
            }
        }






    </tbody>
</table>

<div>
    <a class="js-button-action btn btn-info" data-action-type="5" href="#">Posalji fakture</a>
    <a class="js-button-action btn btn-info" data-action-type="1" href="#">Platio</a>
    <a class="js-button-action btn btn-info" data-action-type="2" href="#">Nije Platio</a>
    <a class="js-button-action btn btn-info" data-action-type="3" href="#">Posalji Prvu opomenu</a>
    <a class="js-button-action btn btn-info" data-action-type="4" href="#">Posalji Drugu opomenu</a>
</div>
<br />
<br />
<div class="form-group">
    <div>
        <a class="btn btn-info" href="@Url.Action("AllUsers", "Billing")?year=@(year-1)">Prethodna godina</a>
        <a class="btn btn-info" href="@Url.Action("AllUsers", "Billing")?year=@(year+1)">Naredna godina</a>
    </div>
</div>

<!--popups-->
<div id="modal-from-dom" class="modal hide overlay">
<div class="popup">
    <div class="modal-header">
        <a href="#" data-dismiss="modal" class="close">&times;</a>
        <h3>Izbor kompnaije</h3>
    </div>
    <div class="modal-body">
        <div class="form-group">
            <form action="@Url.Action("CreateBill", "Billing")" method="GET">
                <label for="company">Odaberite kompaniju sa koje se vrsi fakurisanje</label>
                <select class="form-control" id="company">
                    @foreach (var firm in SessionData.Firms)
                    {
                        <option value="@firm.FirmId">@firm.FirmName</option>
                    }
                </select>
            </form>
        </div>
    </div>
    <div class="modal-footer">
        <a href="#" data-dismiss="modal" class="btn secondary">Odustani</a>
        <a href="" class="btn danger">Izaberi</a>
    </div>
</div>
</div>

<script>
    $('.create-bill').on('click', function (e) {
        e.preventDefault();
        $('#modal-from-dom').modal('show').trigger('show');
    });

    $(document).on("click", ".js-button-action", function (e) {
        e.preventDefault();

        var clientChkbox = [];
        var monthsChkbox = [];

        var actionType = $(this).attr("data-action-type");

        var clientCheckboxInputs = $(".js-client-id");

        $.each(clientCheckboxInputs, function (index, value) {
            var boolValue = $(this).is(':checked');
            var clientId = $(this).attr("data-client-id");
            if (boolValue) {
                clientChkbox.push(clientId);
            }
        });

        var monthsCheckboxInputs = $(".js-month-value");
        var year = "";

        $.each(monthsCheckboxInputs, function (index, value) {
            var boolValue = $(this).is(':checked');
            var month = $(this).attr("data-month");
            if (boolValue) {
                monthsChkbox.push(month);
            }
            if (year == "") {
                year = $(this).attr("data-year");
            }
        });


        var dataToSend = {
            ClientIds: clientChkbox,
            Months: monthsChkbox,
            ActionType: actionType,
            Year: year
        };

        $.ajax({
            url: '@Url.Action("UpdateClientBillings", "Billing")',
            type: 'POST',
            contentType: "application/json",
            data: JSON.stringify(dataToSend),
            success: function (data) {
                location.reload();
            },
            error: function () {
                alert("Doslo je do greske! Pokusajte ponovo");
            }
        });

    });

    $(document).ready(function () {
        $(".js-client-id").attr('checked', true);
    })
</script>