@{ 
    var methodName = (bool)ViewData["hasReport"] ? "UpdateReportData" : "InsertReportData";
    int monthlyPeriod = 0;
    int dateRelatedColumnNumbers = 0;
    var dictionary = new Dictionary<string, List<DailyJob.Models.ReportData>>();
    KeyValuePair<string, List<DailyJob.Models.ReportData>> defaultDateObject;
    List<DailyJob.Models.ReportData> firstList = new List<DailyJob.Models.ReportData>();
    DailyJob.Models.ReportData firstObject = new DailyJob.Models.ReportData();

    var dateRelatedObjects = (List<DailyJob.Models.ReportData>)ViewData["dateRelatedObjects"];
    var nonDateRelatedObjects = (List<DailyJob.Models.ReportData>)ViewData["nonDateRelatedObjects"];

    if (dateRelatedObjects != null && dateRelatedObjects.Count > 0) {
        monthlyPeriod = dateRelatedObjects.FirstOrDefault().MonthlyPeriod;

        dateRelatedColumnNumbers = 12 / monthlyPeriod;

        dictionary = new Dictionary<string, List<DailyJob.Models.ReportData>>();

        foreach (var item in dateRelatedObjects)
        {
            var key = item.Year + "-" + item.Month;

            if (!dictionary.ContainsKey(key))
            {
                var reportList = new List<DailyJob.Models.ReportData> { item };
                dictionary.Add(key, reportList);
            }
            else
            {
                var currentList = dictionary[key];
                currentList.Add(item);
            }

        }

        defaultDateObject = dictionary.FirstOrDefault();
        firstList = defaultDateObject.Value;
        firstObject = firstList.FirstOrDefault();
    }
}

<div style="border:1px solid black; width: 100%; overflow-x:scroll;">
    <table id="mytable" class="table table-bordred table-striped">
        <tbody>
            <tr>
                @for (int i = 1; i <= dateRelatedColumnNumbers; i++)
            {
                    <th>@i</th>
            }

                @foreach (var item in nonDateRelatedObjects)
            {
                    <th>@item.ColumnName</th>
            }
            </tr>
        </tbody>
        <tbody>
            <tr>
                @if (dateRelatedObjects != null && dateRelatedObjects.Count > 0)
            {
                for (int i = monthlyPeriod; i <= 12; i = i + monthlyPeriod)
                {

                    var dynamicKey = firstList.FirstOrDefault().Year + "-" + i;
                    var element = dictionary.ContainsKey(dynamicKey) ? dictionary[dynamicKey] : null;
                    if (element != null)
                    {

                            <td>
                                @foreach (var val in element)
                            {
                                if (val.TypeID == 3)
                                {
                                        <input class="js-checkbox-value" type="checkbox" name="@val.ColumnName" value="@val.BoolValue" @(val.BoolValue ? "checked" : "") data-year="@((int)ViewData["year"])" data-month="@i" data-type="@val.TypeID" data-name="@val.ColumnName" data-date-related="@val.IsDateRelated" data-monthly-period="@val.MonthlyPeriod" data-ordering="@val.Ordering">@val.ColumnName<br>
                                }

                                if (val.TypeID == 1)
                                {
                                        @val.ColumnName<br><input class="js-text-value" type="text" id="@val.ColumnName" name="@val.ColumnName" value="@val.TextValue" data-type="@val.TypeID" data-name="@val.ColumnName" data-year="@((int)ViewData["year"])" data-date-related="@val.IsDateRelated" data-monthly-period="@val.MonthlyPeriod" data-ordering="@val.Ordering" data-month="@i">

                                }

                                if (val.TypeID == 2)
                                {
                                        @val.ColumnName<br><input class="js-date-value" type="date" id="@val.ColumnName" name="@val.ColumnName" value="@val.DateValue.ToString("yyyy-MM-dd")" data-type="@val.TypeID" data-name="@val.ColumnName" data-year="@((int)ViewData["year"])" data-date-related="@val.IsDateRelated" data-monthly-period="@val.MonthlyPeriod" data-ordering="@val.Ordering" data-month="@i">
                                }

                            }
                            </td>
                    }

                }
            }


                @*@for (int i = 0; i < dateRelatedColumnNumbers - dictionary.Count; i++)
                    {
                        <td>
                            @foreach (var val in firstList)
                            {
                                <input type="checkbox" name="@val.ColumnName" value="@val.BoolValue" data-year="@val.Year" data-month="@((i+1+dictionary.Count)*val.MonthlyPeriod)">@val.ColumnName<br>
                            }
                        </td>
                    }*@

                @foreach (var val in nonDateRelatedObjects)
            {
                if (val.TypeID == 1)
                {
                        <td> <input class="js-text-value" type="text" id="@val.ColumnName" name="@val.ColumnName" value="@val.TextValue" data-type="@val.TypeID" data-name="@val.ColumnName" data-year="@((int)ViewData["year"])" data-date-related="@val.IsDateRelated" data-monthly-period="@val.MonthlyPeriod" data-ordering="@val.Ordering"></td>
                        @*<td><a href="/Clients/Details?clientId=4">@val.TextValue</a></td>*@
                }

                if (val.TypeID == 3)
                {
                        <td><input class="js-bool-value" type="checkbox" name="@val.ColumnName" value="@val.BoolValue" @(val.BoolValue ? "checked" : "") data-type="@val.TypeID" data-name="@val.ColumnName" data-year="@((int)ViewData["year"])" data-date-related="@val.IsDateRelated" data-monthly-period="@val.MonthlyPeriod" data-ordering="@val.Ordering">@val.ColumnName<br></td>
                }

                if (val.TypeID == 2)
                {
                        <td><input class="js-date-value" type="date" id="@val.ColumnName" name="@val.ColumnName" value="@val.DateValue.ToString("yyyy-MM-dd")" data-type="@val.TypeID" data-name="@val.ColumnName" data-year="@((int)ViewData["year"])" data-date-related="@val.IsDateRelated" data-monthly-period="@val.MonthlyPeriod" data-ordering="@val.Ordering"></td>
                        @*<td><a href="/Clients/Details?clientId=4">@val.DateValue.ToString()</a></td>*@
                }
            }
            </tr>
        </tbody>
    </table>
</div>


<div class="form-group">
    <div class="">
        <a href="@Url.Action("Details", "Clients")?ClientID=@ViewData["clientId"]" class="btn btn-danger" >Nazad</a>
        <input type="submit" value="Sacuvaj" class="btn btn-info js-save-report " />
    </div>
    </br>
    </br>
    <div>
        <a class="btn btn-info" href="@Url.Action("GetReportDetails", "Clients")?ClientID=@((long)ViewData["clientId"])&ReportID=@((long)ViewData["reportId"])&year=@((int)ViewData["year"]-1)">Prethodna godina (@((int)ViewData["year"] - 1))</a>
        <a class="btn btn-info" href="@Url.Action("GetReportDetails", "Clients")?ClientID=@((long)ViewData["clientId"])&ReportID=@((long)ViewData["reportId"])&year=@((int)ViewData["year"]+1)">Naredna godina (@((int)ViewData["year"] + 1))</a>
    </div>
</div>

<script>
    $(document).on("click", ".js-save-report", function () {
        var reportDataArray = [];

        //checkbox only(bool type)
        var checkboxInputs = $(".js-checkbox-value");

        $.each(checkboxInputs, function (index, value) {
            var month = $(this).attr("data-month");
            var year = $(this).attr("data-year");
            var typeId = $(this).attr("data-type");
            var columnName = $(this).attr("data-name");
            var boolValue = $(this).is(':checked');
            var isDateRelated = $(this).attr("data-date-related");
            var monthlyPeriod = $(this).attr("data-monthly-period");
            var ordering = $(this).attr("data-ordering");

            var dataCheckbox = {
                clientId: "@((long)ViewData["clientId"])",
                reportId: "@((long)ViewData["reportId"])",
                typeId: typeId,
                columnName: columnName,
                year: year,
                month: month,
                boolValue: boolValue,
                isDateRelated: isDateRelated,
                monthlyPeriod: monthlyPeriod,
                ordering: ordering
            };

            reportDataArray.push(dataCheckbox);

            console.log(boolValue);

        });

        //text data type
        var textDataInputs = $(".js-text-value");

        $.each(textDataInputs, function (index, value) {
            var month = $(this).attr("data-month");
            var typeId = $(this).attr("data-type");
            var columnName = $(this).attr("data-name");
            var textValue = $(this).val();
            var year = $(this).attr("data-year");
            var isDateRelated = $(this).attr("data-date-related");
            var monthlyPeriod = $(this).attr("data-monthly-period");
            var ordering = $(this).attr("data-ordering");

            var textData = {
                clientId: "@((long)ViewData["clientId"])",
                reportId: "@((long)ViewData["reportId"])",
                typeId: typeId,
                columnName: columnName,
                year: year,
                month: "",
                textValue: textValue,
                isDateRelated: isDateRelated,
                monthlyPeriod: monthlyPeriod,
                ordering: ordering,
                month: month
            };

            reportDataArray.push(textData);
        });


        //date data type

        var dateDataInputs = $(".js-date-value");

        $.each(dateDataInputs, function (index, value) {
            var month = $(this).attr("data-month");
            var typeId = $(this).attr("data-type");
            var columnName = $(this).attr("data-name");
            var dateValue = $(this).val();
            var year = $(this).attr("data-year");
            var isDateRelated = $(this).attr("data-date-related");
            var monthlyPeriod = $(this).attr("data-monthly-period");
            var ordering = $(this).attr("data-ordering");

            var dateData = {
                clientId: "@((long)ViewData["clientId"])",
                reportId: "@((long)ViewData["reportId"])",
                typeId: typeId,
                columnName: columnName,
                year: year,
                month: "",
                dateValue: dateValue,
                isDateRelated: isDateRelated,
                monthlyPeriod: monthlyPeriod,
                ordering: ordering,
                month: month
            };

            reportDataArray.push(dateData);

        });

        //bool data value
        var boolDataInputs = $(".js-bool-value");

        $.each(boolDataInputs, function (index, value) {
            var month = $(this).attr("data-month");
            var typeId = $(this).attr("data-type");
            var columnName = $(this).attr("data-name");
            var boolValue = $(this).is(':checked');
            var year = $(this).attr("data-year");
            var isDateRelated = $(this).attr("data-date-related");
            var monthlyPeriod = $(this).attr("data-monthly-period");
            var ordering = $(this).attr("data-ordering");

            var boolData = {
                clientId: "@((long)ViewData["clientId"])",
                reportId: "@((long)ViewData["reportId"])",
                typeId: typeId,
                columnName: columnName,
                year: year,
                month: "",
                boolValue: boolValue,
                isDateRelated: isDateRelated,
                monthlyPeriod: monthlyPeriod,
                ordering: ordering,
                month: month
            };

            reportDataArray.push(boolData);

        });

        $.ajax({
            url: '@Url.Action(methodName, "Clients")',
            type: 'POST',
            data: {
                ClientId: @((long)ViewData["clientId"]),
                ReportId: @((long)ViewData["reportId"]),
                ReportData: reportDataArray
            },

            success: function (data) {
                location.reload();
            },
            error: function () {
                alert("Doslo je do greske! Pokusajte ponovo");
            }
        });



    });






</script>