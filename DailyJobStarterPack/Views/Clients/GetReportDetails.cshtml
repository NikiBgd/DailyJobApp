@{ 
    var dateRelatedObjects = (List<DailyJob.Models.ReportData>)ViewData["dateRelatedObjects"];
    var nonDateRelatedObjects = (List<DailyJob.Models.ReportData>)ViewData["nonDateRelatedObjects"];

    var monthlyPeriod = dateRelatedObjects.FirstOrDefault().MonthlyPeriod;

    var dateRelatedColumnNumbers = 12 / monthlyPeriod;

    var dictionary = new Dictionary<string, List<DailyJob.Models.ReportData>>();

    foreach(var item in dateRelatedObjects)
    {
        var key = item.Year + "-" + item.Month;

        if (!dictionary.ContainsKey(key))
        {
            var reportList = new List<DailyJob.Models.ReportData> { item };
            dictionary.Add(key, reportList);
        }
        else
        {
            var currentList = dictionary[key];
            currentList.Add(item);
        }

    }

    var defaultDateObject = dictionary.FirstOrDefault();
    var firstList = defaultDateObject.Value;
    var firstObject = firstList.FirstOrDefault();
}

<table id="mytable" class="table table-bordred table-striped" style="border: 1px solid black;">
    <tbody>
        <tr>
            @for (int i = 1; i <= dateRelatedColumnNumbers; i++)
            {
                <th>@i</th>
            }

            @foreach (var item in nonDateRelatedObjects)
            {
                <th>@item.ColumnName</th>
            }
        </tr>
    </tbody>
    <tbody>
        <tr>
           
            @for(int i = monthlyPeriod; i<= 12; i=i+monthlyPeriod)
            {
               
                var dynamicKey = firstList.FirstOrDefault().Year + "-" + i;
                var element = dictionary.ContainsKey(dynamicKey) ? dictionary[dynamicKey] : null;
                if (element != null)
                {

                    <td>
                        @foreach (var val in element)
                        {
                            <input class="js-checkbox-value" type="checkbox" name="@val.ColumnName" value="@val.BoolValue" @(val.BoolValue ? "checked" : "") data-year="@val.Year" data-month="@i" data-type="@val.TypeID" data-name="@val.ColumnName">@val.ColumnName<br>
                        }
                    </td>
                }
                else
                {
                    <td>
                        @foreach (var val in firstList)
                        {
                            <input class="js-checkbox-value" type="checkbox" name="@val.ColumnName" value="@val.BoolValue" data-year="@val.Year" data-month="@i" data-type="@val.TypeID" data-name="@val.ColumnName">@val.ColumnName<br>
                        }
                    </td>

                    
                }
            }


            @*@for (int i = 0; i < dateRelatedColumnNumbers - dictionary.Count; i++)
            {
                <td>
                    @foreach (var val in firstList)
                    {
                        <input type="checkbox" name="@val.ColumnName" value="@val.BoolValue" data-year="@val.Year" data-month="@((i+1+dictionary.Count)*val.MonthlyPeriod)">@val.ColumnName<br>
                    }
                </td>
            }*@

            @foreach (var val in nonDateRelatedObjects)
            {
                if (val.Type == "String")
                {
                   <td> <input class="js-text-value" type="text" id="@val.ColumnName" name="@val.ColumnName" value="@val.TextValue" data-type="@val.TypeID" data-name="@val.ColumnName" data-year="@val.Year"></td>
                    @*<td><a href="/Clients/Details?clientId=4">@val.TextValue</a></td>*@
                }

                if (val.Type == "Bool")
                {
                    <input class="js-bool-value" type="checkbox" name="@val.ColumnName" value="@val.BoolValue" @(val.BoolValue ? "checked" : "") data-type="@val.TypeID" data-name="@val.ColumnName" data-year="@val.Year">@val.ColumnName<br>
                }

                if (val.Type == "Date")
                {
                    <td><input class="js-date-value" type="date" id="@val.ColumnName" name="@val.ColumnName" value="@val.DateValue.ToString("yyyy-MM-dd")" data-type="@val.TypeID" data-name="@val.ColumnName" data-year="@val.Year"></td>
                    @*<td><a href="/Clients/Details?clientId=4">@val.DateValue.ToString()</a></td>*@
                }
            }
        </tr>
    </tbody>
</table>



<div class="form-group">
    <div class="js-save-report">
        <input type="submit" value="Save" class="btn btn-info" />
    </div>
    </br>
    </br>
    <div>
        <a class="btn btn-info" href="/Clients/GetReportDetails?ClientID=@((long)ViewData["clientId"])&ReportID=@((long)ViewData["reportId"])&year=@((int)ViewData["year"]-1)">Previous Year</a>
        <a class="btn btn-info" href="/Clients/GetReportDetails?ClientID=@((long)ViewData["clientId"])&ReportID=@((long)ViewData["reportId"])&year=@((int)ViewData["year"]+1)">Next Year</a>
    </div>
</div>

<script>
    $(document).on("click", ".js-save-report", function () {
        var reportDataArray = [];

        //checkbox only(bool type)
        var checkboxInputs = $(".js-checkbox-value");

        $.each(checkboxInputs, function (index, value) {
            var month = $(this).attr("data-month");
            var year = $(this).attr("data-year");
            var typeId = $(this).attr("data-type");
            var columnName = $(this).attr("data-name");
            var boolValue = $(this).is(':checked')

            var dataCheckbox = {
                clientId: "@((long)ViewData["clientId"])",
                reportId: "@((long)ViewData["reportId"])",
                typeId: typeId,
                columnName: columnName,
                year: year,
                month: month,
                boolValue: boolValue
            };

            reportDataArray.push(dataCheckbox);

            console.log(boolValue);

        });

        //text data type
        var textDataInputs = $(".js-text-value");

        $.each(textDataInputs, function (index, value) {
            var typeId = $(this).attr("data-type");
            var columnName = $(this).attr("data-name");
            var textValue = $(this).val();
            var year = $(this).attr("data-year");

            var textData = {
                clientId: "@((long)ViewData["clientId"])",
                reportId: "@((long)ViewData["reportId"])",
                typeId: typeId,
                columnName: columnName,
                year: year,
                month: "",
                textValue: textValue
            };

            reportDataArray.push(textData);
        });


        //date data type

        var dateDataInputs = $(".js-date-value");

        $.each(dateDataInputs, function (index, value) {
            var typeId = $(this).attr("data-type");
            var columnName = $(this).attr("data-name");
            var dateValue = $(this).val();
            var year = $(this).attr("data-year");

            var dateData = {
                clientId: "@((long)ViewData["clientId"])",
                reportId: "@((long)ViewData["reportId"])",
                typeId: typeId,
                columnName: columnName,
                year: year,
                month: "",
                dateValue: dateValue
            };

            reportDataArray.push(dateData);

        });

        //bool data value
        var boolDataInputs = $(".js-bool-value");

        $.each(boolDataInputs, function (index, value) {
            var typeId = $(this).attr("data-type");
            var columnName = $(this).attr("data-name");
            var boolValue = $(this).val();
            var year = $(this).attr("data-year");

            var boolData = {
                clientId: "@((long)ViewData["clientId"])",
                reportId: "@((long)ViewData["reportId"])",
                typeId: typeId,
                columnName: columnName,
                year: year,
                month: "",
                boolValue: boolValue
            };

            reportDataArray.push(boolData);

        });


        $.ajax({
            url: '/clients/UpdateReportData',
            type: 'POST',
            data: {
                ClientId: @((long)ViewData["clientId"]),
                ReportId: @((long)ViewData["reportId"]),
                ReportData: reportDataArray
            },

            success: function (data) {
                location.reload();
            },
            error: function () {
                alert("Doslo je do greske! Pokusajte ponovo");
            }
        });



    });






</script>